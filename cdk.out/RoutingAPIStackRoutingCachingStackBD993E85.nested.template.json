{
 "Resources": {
  "PoolCacheBucketD80D665F": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheBucket/Resource"
   }
  },
  "PoolCacheBucket20A883DAA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 3650,
       "Status": "Enabled"
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheBucket2/Resource"
   }
  },
  "RoutingLambdaRole270B0918": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingLambdaRole/Resource"
   }
  },
  "RoutingLambdaRoleDefaultPolicyB8EDD428": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PoolCacheBucket20A883DAA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PoolCacheBucket20A883DAA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TokenListCacheBucketB0AEA45C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TokenListCacheBucketB0AEA45C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "Roles": [
     {
      "Ref": "RoutingLambdaRole270B0918"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingLambdaRole/DefaultPolicy/Resource"
   }
  },
  "PoolCacheLambdaProtocolV31AB5A262": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2eb8cd08b1dfd5cfbf005e2879f5d1fa3ec1e91c4ea80d26c900e08a97296301.zip"
    },
    "Description": "Pool Cache Lambda with Protocol V3",
    "Environment": {
     "Variables": {
      "POOL_CACHE_BUCKET": {
       "Ref": "PoolCacheBucketD80D665F"
      },
      "POOL_CACHE_BUCKET_2": {
       "Ref": "PoolCacheBucket20A883DAA"
      },
      "POOL_CACHE_KEY": "poolCache.json",
      "protocol": "V3",
      "timeout": "90000",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/PoolCacheLambda-ProtocolV3/Resource",
    "aws:asset:path": "asset.2eb8cd08b1dfd5cfbf005e2879f5d1fa3ec1e91c4ea80d26c900e08a97296301",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SchedulePoolCacheProtocolV3BE1BA928": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "PoolCacheLambdaProtocolV31AB5A262",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ProtocolV3/Resource"
   }
  },
  "SchedulePoolCacheProtocolV3AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaProtocolV3CB7768EDA91B3522": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PoolCacheLambdaProtocolV31AB5A262",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SchedulePoolCacheProtocolV3BE1BA928",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/SchedulePoolCache-ProtocolV3/AllowEventRuleRoutingAPIStackRoutingCachingStackPoolCacheLambdaProtocolV3CB7768ED"
   }
  },
  "RoutingAPISEV4PoolCacheToS3LambdaErrorRateProtocolV33A9DDA7F": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 12,
    "Metrics": [
     {
      "Expression": "(invocations - errors) < 1",
      "Id": "expr_1"
     },
     {
      "Id": "invocations",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaProtocolV31AB5A262"
          }
         }
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     },
     {
      "Id": "errors",
      "MetricStat": {
       "Metric": {
        "Dimensions": [
         {
          "Name": "FunctionName",
          "Value": {
           "Ref": "PoolCacheLambdaProtocolV31AB5A262"
          }
         }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda"
       },
       "Period": 300,
       "Stat": "Sum"
      },
      "ReturnData": false
     }
    ],
    "Threshold": 50
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-SEV4-PoolCacheToS3LambdaErrorRate-ProtocolV3/Resource"
   }
  },
  "RoutingAPIPoolCacheToS3LambdaThrottlesProtocolV3C3CA1387": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "PoolCacheLambdaProtocolV31AB5A262"
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "Throttles",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/RoutingAPI-PoolCacheToS3LambdaThrottles-ProtocolV3/Resource"
   }
  },
  "TokenListCacheBucketB0AEA45C": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/TokenListCacheBucket/Resource"
   }
  },
  "TokenListCacheLambda8F76F145": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0bc2b583e5d8f9cf0a1b9b76f1ca9be88f816346c326532d1298d9245a840d26.zip"
    },
    "Description": "Token List Cache Lambda",
    "Environment": {
     "Variables": {
      "TOKEN_LIST_CACHE_BUCKET": {
       "Ref": "TokenListCacheBucketB0AEA45C"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension:14"
       ]
      ]
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RoutingLambdaRole270B0918",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 180,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "RoutingLambdaRoleDefaultPolicyB8EDD428",
    "RoutingLambdaRole270B0918"
   ],
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/TokenListCacheLambda/Resource",
    "aws:asset:path": "asset.0bc2b583e5d8f9cf0a1b9b76f1ca9be88f816346c326532d1298d9245a840d26",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ScheduleTokenListCacheC8724872": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(15 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "TokenListCacheLambda8F76F145",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/ScheduleTokenListCache/Resource"
   }
  },
  "ScheduleTokenListCacheAllowEventRuleRoutingAPIStackRoutingCachingStackTokenListCacheLambda94A9004E1588C34D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenListCacheLambda8F76F145",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "ScheduleTokenListCacheC8724872",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/ScheduleTokenListCache/AllowEventRuleRoutingAPIStackRoutingCachingStackTokenListCacheLambda94A9004E"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/z2PzW7DIBCEnyV3vM3fodckUo9R5T6ARWCbrs2P5IVEEeLdC9ithPTNamYZ2MNue4TtRj65U3rqDN0gXZED6q8g1SSKMSQ+QDpHNWEQl2+3qgVnyZgFSQup9war3/jpDalXHReVhZH2puXgvMaR4drwEZ0K5J3gwyCZMTCcKtYwpLL/n6l34WyJuUxZ4ANdyac+rrWFWSjjo37KoH4gnYycbbWayFn0yD7OCkUrKR+8k7u33T+j6It3mkKrqG+Fkd8eu3coZ78ZmaibowtkEfqFvzf7wGJDAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "RoutingAPIStack/RoutingCachingStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket620A121AArn": {
   "Value": {
    "Fn::GetAtt": [
     "PoolCacheBucketD80D665F",
     "Arn"
    ]
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket28CA80A17Arn": {
   "Value": {
    "Fn::GetAtt": [
     "PoolCacheBucket20A883DAA",
     "Arn"
    ]
   }
  },
  "RoutingAPIStackRoutingCachingStackTokenListCacheBucket5B090E54Arn": {
   "Value": {
    "Fn::GetAtt": [
     "TokenListCacheBucketB0AEA45C",
     "Arn"
    ]
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket620A121ARef": {
   "Value": {
    "Ref": "PoolCacheBucketD80D665F"
   }
  },
  "RoutingAPIStackRoutingCachingStackPoolCacheBucket28CA80A17Ref": {
   "Value": {
    "Ref": "PoolCacheBucket20A883DAA"
   }
  },
  "RoutingAPIStackRoutingCachingStackTokenListCacheBucket5B090E54Ref": {
   "Value": {
    "Ref": "TokenListCacheBucketB0AEA45C"
   }
  }
 }
}